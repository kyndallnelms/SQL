/* For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL.*/

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata;

/*Who are the top 10 artists based on popularity?*/
SELECT artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity desc
LIMIT 10;

/*What artist released the quietest song?*/
SELECT artist_name, track_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness asc
LIMIT 1;

/* What's the average energy for the 10 most popular songs?*/
SELECT SUM(energy) / COUNT(track_name) AS "AVG Energy"
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

/*Calculate the average popularity for the artists in the Spotify data table.
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.*/
WITH tempTable AS (
SELECT S.artist_name,
AVG(S.popularity) AS average_pop
FROM Spotifydata S
GROUP BY S.artist_name
)
SELECT artist_name, average_pop, 'Top Star' AS tag
FROM tempTable
WHERE average_pop >= 90 ;
